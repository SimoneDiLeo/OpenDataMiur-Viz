library(dplyr)
library(ggplot2)
library(plotly)
library(gapminder)
library(gganimate)
library(readxl)
Albero <- read_excel("C:/Users/simon/Desktop/Analisi Congiunte.xlsx", sheet = "Sunburst kmean")
Albero[is.na(Albero)] <- ""
fig <- plot_ly(ids = Albero$Id, labels = Albero$Label,parents = Albero$Parent, type = 'sunburst',values =Albero$Value,
hoverinfo =  "text",
hovertext =  ~paste0(Albero$Label),
branchvalues = 'total')
fig%>% config(displayModeBar = F)
Albero <- read_excel("C:/Users/simon/Desktop/Analisi Congiunte.xlsx", sheet = "Sunburst kmean")
Albero[is.na(Albero)] <- ""
fig <- plot_ly(ids = Albero$Id, labels = Albero$Label,parents = Albero$Parent, type = 'sunburst',values =Albero$Value,
hoverinfo =  "text",
hovertext =  ~paste0(Albero$Label),
branchvalues = 'total')
fig%>% config(displayModeBar = F)
Albero <- read_excel("C:/Users/simon/Desktop/Analisi Congiunte.xlsx", sheet = "Sunburst kmean")
Albero[is.na(Albero)] <- ""
fig <- plot_ly(ids = Albero$Id, labels = Albero$Label,parents = Albero$Parent, type = 'sunburst',values =Albero$Value,
hoverinfo =  "text",
hovertext =  ~paste0(Albero$Label),
branchvalues = 'total')
fig%>% config(displayModeBar = F)
library(tidyverse)
library(factoextra)
library(factoextra)
library(NbClust)
library(readxl)
library(plotly)
library(RColorBrewer)
library(ggplot2)
IscrittiAteneiItaliani<-read_xlsx("/data/ETER_DATA_IT.xlsx)
IscrittiAteneiItaliani<-read_xlsx("/data/ETER_DATA_IT.xlsx")
IscrittiAteneiItaliani<-read_xlsx("./data/ETER_DATA_IT.xlsx")
library(here)
install.packages("here")
here("data", "ETER_DATA_IT.xlsx")
library(here)
library(here)
here("data", "ETER_DATA_IT.xlsx")
setwd("~/")
IscrittiAteneiItaliani<-read_xlsx("./data/ETER_DATA_IT.xlsx")
here("data", "ETER_DATA_IT.xlsx")
setwd("C:/Users/simon/Desktop/EXTRA/workspace/Script R/Progetti Extra/OpenDataMiur Viz")
here("data", "ETER_DATA_IT.xlsx")
IscrittiAteneiItaliani<-read_xlsx("./data/ETER_DATA_IT.xlsx")
IscrittiAteneiItaliani<-read_xlsx("./data/ETER_DATA_IT.xlsx")
View(IscrittiAteneiItaliani)
esquisse:::esquisser()
esquisse:::esquisser()
install.packages("fpc")
install.packages("dbscan")
library(fpc)
library(dbscan)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 0.15, MinPts = 5)
library(tidyverse)
library(factoextra)
library(NbClust)
library(here)
library(readxl)
library(plotly)
library(RColorBrewer)
library(ggplot2)
library(fpc)
library(dbscan)
IscrittiAteneiItaliani<-read.csv2("http://dati.ustat.miur.it/dataset/3dd9ca7f-9cc9-4a1a-915c-e569b181dbd5/resource/32d26e28-a0b5-45f3-9152-6072164f3e63/download/iscrittixateneo.csv")
IscrittiAteneiItaliani$SommaIscritti<-IscrittiAteneiItaliani$Isc_M+IscrittiAteneiItaliani$Isc_F
IscrittiAteneiItaliani$AnnoA<-str_remove(IscrittiAteneiItaliani$AnnoA,"/.*")
IscrittiAteneiItaliani$SommaIscritti
MediaIscrittiMatrice<-aggregate(IscrittiAteneiItaliani$SommaIscritti~IscrittiAteneiItaliani$AteneoCOD, FUN = mean,data=IscrittiAteneiItaliani)
colnames(MediaIscrittiMatrice)[1] <- "Ateneo"
colnames(MediaIscrittiMatrice)[2] <- "MediaIscritti"
MediaIscritti<-data.frame(MediaIscrittiMatrice$MediaIscritti)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 0.15, MinPts = 5)
View(DBScanData)
View(DBScanData)
View(DBScanData)
DBScanData$cluster
dbscan::kNNdistplot(MediaIscritti, k =  5)
abline(h = 0.15, lty = 2)
dbscan::kNNdistplot(MediaIscritti, k =  10)
dbscan::kNNdistplot(MediaIscritti, k =  3)
dbscan::kNNdistplot(MediaIscritti, k =  6)
dbscan::kNNdistplot(MediaIscritti, k =  4)
dbscan::kNNdistplot(MediaIscritti, k =  5)
abline(h = 0.15, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 0.15, MinPts = 4)
DBScanData$cluster
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1, MinPts = 4)
DBScanData$cluster
summary(MediaIscritti)
library(caret)
as.data.frame(scale(MediaIscritti))
NormIscritti<-as.data.frame(scale(MediaIscritti))
dbscan::kNNdistplot(NormIscritti, k =  5)
abline(h = 0.15, lty = 2)
DBScanData <- fpc::dbscan(NormIscritti, eps = 1, MinPts = 4)
DBScanData$cluster
DBScanData <- fpc::dbscan(NormIscritti, eps = 0.15, MinPts = 4)
DBScanData$cluster
dbscan::kNNdistplot(NormIscritti, k =  3)
dbscan::kNNdistplot(NormIscritti, k =  6)
abline(h = 0.15, lty = 2)
dbscan::kNNdistplot(NormIscritti, k =  3)
abline(h = 0.15, lty = 2)
DBScanData <- fpc::dbscan(NormIscritti, eps = 0.15, MinPts = 3)
DBScanData$cluster
DBScanData$eps
DBScanData$isseed
DBScanData$MinPts
MediaIscrittiMatriceNorm$Dati<-NormIscritti
NormIscritti
MediaIscrittiMatriceNorm
MediaIscrittiMatriceNorm$Dati=NormIscritti
MediaIscrittiMatriceNorm<-NormIscritti
View(NormIscritti)
colnames(MediaIscrittiMatrice)[1] <- "Data"
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
View(NormIscritti)
View(MediaIscrittiMatriceNorm)
View(MediaIscritti)
View(IscrittiAteneiItaliani)
esquisse:::esquisser()
library(MeanShift)
install.packages("MeanShift")
library(MeanShift)
plot(NormIscritti, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
esquisse:::esquisser()
#DBScane k choice
dbscan::kNNdistplot(NormIscritti, k =  3)
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan) +
geom_point(shape = "circle", size = 1.5,
colour = "#112446") +
theme_minimal()
ggplotly(plotDB)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  3)
abline(h = 0.15, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 0.15, MinPts = 3)
DBScanData$cluster
DBScanData <- fpc::dbscan(MediaIscritti, eps = 150, MinPts = 3)
DBScanData$cluster
abline(h = 150, lty = 2)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  3)
abline(h = 150, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 150, MinPts = 3)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  5)
abline(h = 150, lty = 2)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  2)
abline(h = 150, lty = 2)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  4)
abline(h = 150, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 150, MinPts = 4)
DBScanData$cluster
DBScanData <- fpc::dbscan(MediaIscritti, eps = 150, MinPts = 3)
DBScanData$cluster
abline(h = 1500, lty = 2)
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  4)
abline(h = 1500, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 3)
DBScanData$cluster
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  4)
abline(h = 1500, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 4)
DBScanData$cluster
MediaIscrittiMatriceNorm<-NormIscritti
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
esquisse:::esquisser()
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  4)
abline(h = 1500, lty = 2)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 4)
DBScanData$cluster
MediaIscrittiMatriceNorm<-MediaIscritti
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
esquisse:::esquisser()
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, fill = clusterDBScan) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
scale_fill_gradient() +
theme_minimal()
ggplotly(plotDB)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 3)
DBScanData$cluster
MediaIscrittiMatriceNorm<-MediaIscritti
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, fill = clusterDBScan) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
scale_fill_gradient() +
theme_minimal()
ggplotly(plotDB)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 5)
DBScanData$cluster
MediaIscrittiMatriceNorm<-MediaIscritti
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, fill = clusterDBScan) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
scale_fill_gradient() +
theme_minimal()
ggplotly(plotDB)
DBScanData <- fpc::dbscan(MediaIscritti, eps = 1500, MinPts = 4)
DBScanData$cluster
MediaIscrittiMatriceNorm<-MediaIscritti
colnames(MediaIscrittiMatriceNorm)[1] <- "Data"
MediaIscrittiMatriceNorm$clusterDBScan<-DBScanData$cluster
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, fill = clusterDBScan) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
scale_fill_gradient() +
theme_minimal()
ggplotly(plotDB)
desc2=c("Mega Ateneo","Piccolissimo Ateneo","Piccolo Ateneo","Medio Ateneo","Grande Ateneo",)
IdCluster2=c(0,1,2,3,4)
DBscanDesc<-desc2
DBscanDesc$cluster<-IdCluster2
desc2=c("Mega Ateneo","Piccolissimo Ateneo","Piccolo Ateneo","Medio Ateneo","Grande Ateneo",)
desc2=c("Mega Ateneo","Piccolissimo Ateneo","Piccolo Ateneo","Medio Ateneo","Grande Ateneo")
IdCluster2=c(0,1,2,3,4)
DBscanDesc<-desc2
DBscanDesc$cluster<-IdCluster2
View(DBscanDesc)
DBscanDesc<-data.frame(desc2)
DBscanDesc$cluster<-IdCluster2
View(DBscanDesc)
View(MediaIscrittiMatriceNorm)
View(DBscanDesc)
MediaIscrittiMatriceNorm<-merge(MediaIscrittiMatriceNorm, Centroidi, by.x = "clusterDBScan",by.y = "cluster")
MediaIscrittiMatriceNorm<-merge(MediaIscrittiMatriceNorm, DBscanDesc, by.x = "clusterDBScan",by.y = "cluster")
View(MediaIscrittiMatriceNorm)
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, fill = clusterDBScan) +
geom_point(shape = "circle",
size = 1.5, colour = "#112446") +
scale_fill_gradient() +
theme_minimal()
ggplotly(plotDB)
esquisse:::esquisser()
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, colour = desc2, size = Data) +
geom_point(shape = "diamond") +
scale_color_hue(direction = 1) +
labs(x = "Numero Iscritti", y = "Cluster", title = "Risultati cluster usando DB Scan",
color = "Dimensione ateneo", size = "Numero Iscritti") +
theme_light() +
theme(plot.title = element_text(size = 16L,
face = "bold", hjust = 0.5))
ggplotly(plotDB)
ggplotly(plotDB)%>% config(displayModeBar = F)
#Mean Shifting Cluster
plot(NormIscritti, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
#Mean Shifting Cluster
plot(v, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
#Mean Shifting Cluster
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=h,
alpha=0,
iterations = iter,
parameters=c(10,100)
)
library(MeanShift)
install.packages("MeanShift")
library(MeanShift)
install.packages("MeanShiftR")
install.packages("meanShiftR")
library(meanShiftR)
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=h,
alpha=0,
iterations = iter,
parameters=c(10,100)
)
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=20,
alpha=0,
iterations = iter,
parameters=c(10,100)
)
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=20,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result$value
View(result)
result[["assignment"]]
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=60,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=2,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=1500,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=1,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=0.1,
alpha=0,
iterations = 500,
parameters=c(10,100)
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=1,
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=10000,
)
result$assignment
result <- meanShift(
MediaIscrittiMatriceNorm$Data,
algorithm="KDTREE",
bandwidth=50,
)
result$assignment
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Sum of distance within each group",
main = "Change of distance sum as increasing bandwidth", col = "red")
#DBScane k choice
dbscan::kNNdistplot(MediaIscritti, k =  4)
plot(MediaIscrittiMatriceNorm$Data, type = "l", xlab = "Index of quantiles",
ylab = "Number of clusters",
main = "Change of Cluster number as increasing bandwidth", col = "red")
dbscan::kNNdistplot(MediaIscritti, k =  4)
abline(h = 1500, lty = 2)
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, colour = desc2, size = Data) +
geom_point(shape = "diamond") +
scale_color_hue(direction = 1) +
labs(x = "Numero Iscritti", y = "Cluster", title = "Risultati cluster DB Scan",
color = "Dimensione ateneo", size = "Numero Iscritti") +
theme_light() +
theme(plot.title = element_text(size = 16L,
face = "bold", hjust = 0.5))
ggplotly(plotDB)%>% config(displayModeBar = F)
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, colour = desc2, size = Data) +
geom_point(shape = "diamond") +
scale_color_hue(direction = 1) +
labs(x = "Numero Iscritti", y = "Cluster", title = "Risultati cluster DB Scan",
color = "Dimensione ateneo") +
theme_light() +
theme(plot.title = element_text(size = 16L,
face = "bold", hjust = 0.5))
ggplotly(plotDB)%>% config(displayModeBar = F)
plotDB<-ggplot(MediaIscrittiMatriceNorm) +
aes(x = Data, y = clusterDBScan, colour = desc2, size = Data) +
geom_point(shape = "diamond") +
scale_color_hue(direction = 1) +
labs(x = "Numero Iscritti", y = "Cluster", title = "Risultati cluster DB Scan",
color = "Dimensione ateneo", size = "") +
theme_light() +
theme(plot.title = element_text(size = 16L,
face = "bold", hjust = 0.5))
ggplotly(plotDB)%>% config(displayModeBar = F)
htmltools::includeHTML("footer.html")
htmltools::includeHTML("DataViz.html")
pp <-ggplotly(fig, width=700, height=600 )%>% config(displayModeBar = F)
library(tidyverse)
library(factoextra)
library(factoextra)
library(NbClust)
library(readxl)
library(plotly)
library(RColorBrewer)
library(ggplot2)
IscrittiAteneiItaliani<-read.csv2("http://dati.ustat.miur.it/dataset/3dd9ca7f-9cc9-4a1a-915c-e569b181dbd5/resource/32d26e28-a0b5-45f3-9152-6072164f3e63/download/iscrittixateneo.csv")
IscrittiAteneiItaliani$SommaIscritti<-IscrittiAteneiItaliani$Isc_M+IscrittiAteneiItaliani$Isc_F
IscrittiAteneiItaliani$AnnoA<-str_remove(IscrittiAteneiItaliani$AnnoA,"/.*")
IscrittiAteneiItaliani$SommaIscritti
MediaIscrittiMatrice<-aggregate(IscrittiAteneiItaliani$SommaIscritti~IscrittiAteneiItaliani$AteneoCOD, FUN = mean,data=IscrittiAteneiItaliani)
colnames(MediaIscrittiMatrice)[1] <- "Ateneo"
colnames(MediaIscrittiMatrice)[2] <- "MediaIscritti"
MediaIscritti<-data.frame(MediaIscrittiMatrice$MediaIscritti)
# Elbow method
fviz_nbclust(MediaIscritti, kmeans, method = "wss") +
geom_vline(xintercept = 4, linetype = 2)+
labs(subtitle = "Elbow method")
# Silhouette method
fviz_nbclust(MediaIscritti, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
# Gap statistic
# nboot = 50 to keep the function speedy.
# recommended value: nboot= 500 for your analysis.
# Use verbose = FALSE to hide computing progression.
set.seed(123)
fviz_nbclust(MediaIscritti, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
#KMEAN Clusterization
KM=kmeans(MediaIscritti,4)
#Clusters
Cluster<-KM$cluster
MediaIscrittiMatrice$cluster<-Cluster
#Centers of the clusters
Centroidi<-data.frame(KM$centers)
colnames(Centroidi)[1] <- "Centroidi Cluster"
desc=c("Grande Ateneo","Piccolo Ateneo","Medio Ateneo","Mega Ateneo")
IdCluster=c(1,2,3,4)
Centroidi$desc<-desc
Centroidi$cluster<-IdCluster
DatiPerGrafico<-merge(MediaIscrittiMatrice, Centroidi, by = "cluster")
fig<-ggplot(DatiPerGrafico) +
aes(x = `Centroidi Cluster`, y = MediaIscritti, colour = desc, text=paste0("Ateneo = ",Ateneo)) +
geom_point(shape = "circle open",
size = 1.5) +
scale_color_brewer(palette = "RdYlBu", direction = -1) +
coord_flip() +
theme_light()+labs(title="Cluster delle universita italiane per media di iscritti nel periodo 2010/2020",color='Legenda dei cluster')+
theme(legend.title = element_text(color = "blue",size = 10,))
pp <-ggplotly(fig, width=700, height=600 )%>% config(displayModeBar = F)
ppc <- htmltools::div( pp, align="center" )
ppc
htmltools::includeHTML("index.html")
